// room script file
function room_RepExec()
{
  AgsImGui.NewFrame(); //let's begin a new frame, we end it with a Render
  AgsImGui.ShowDemoWindow(); //Shows a demo of everything possible
  
  // This is our corner GUI to help us Quit the game
  AgsImGui.SetNextWindowPos(16, 16, eImGuiCond_Always);
  AgsImGui.BeginWindow("Level Selector",false, eImGuiWindowFlags_NoTitleBar);
    if(AgsImGui.Button("Quit Game")) AgsImGui.OpenPopup("Do you really want to Quit?");
  
    if(AgsImGui.BeginPopupModal("Do you really want to Quit?",true)){
      if(AgsImGui.Button("Yes, let me go!")) QuitGame(0);
      if(AgsImGui.Button("No, give me more time!")) AgsImGui.CloseCurrentPopup();
      AgsImGui.EndPopup();
    }
  
  AgsImGui.EndWindow();
  
  AgsImGui.Render(); // This will generate drawing instructions. 
  // AGS will actually draw this on screen later on, on Post Screen Draw stage.
}

void on_mouse_click (int btn){
  if(btn == eMouseWheelNorth){
    AgsImGui.DoMouseWheel(eImGuiDir_Down);
  } else if(btn == eMouseWheelSouth){
    AgsImGui.DoMouseWheel(eImGuiDir_Up);    
  }  
}
function room_Load()
{
  Game.Camera.Width = 320;
  Game.Camera.Height = 200;
  Screen.Viewport.Width = 960;
  Screen.Viewport.Height = 600;
   
  ImVec4* white = ImVec4.Create(1.00, 1.00, 1.00, 1.00);
  ImVec4* transparent = ImVec4.Create(0.00, 0.00, 0.00, 0.00);
  ImVec4* dark = ImVec4.Create(0.00, 0.00, 0.00, 0.20);
  ImVec4* darker = ImVec4.Create(0.00, 0.00, 0.00, 0.50);

  ImVec4* background = ImVec4.Create(0.95, 0.95, 0.95, 1.00);
  ImVec4* text = ImVec4.Create(0.10, 0.10, 0.10, 1.00);
  ImVec4* border = ImVec4.Create(0.64, 0.60, 0.60, 1.00);
  ImVec4* grab = ImVec4.Create(0.69, 0.69, 0.69, 1.00);
  ImVec4* header = ImVec4.Create(0.86, 0.86, 0.86, 1.00);
  ImVec4* active = ImVec4.Create(0.90, 0.47, 0.64, 1.00);
  ImVec4* hover = ImVec4.Create(0.40, 0.87, 0.84, 0.20);
  
  AgsImGui.StyleColorsLight();

  ImGuiStyle* style = AgsImGui.GetStyle();
  
  style.Colors[eImGuiCol_Text] = text;
  style.Colors[eImGuiCol_WindowBg] = background;
  style.Colors[eImGuiCol_ChildBg] = background;
  style.Colors[eImGuiCol_PopupBg] = white;

  style.Colors[eImGuiCol_Border] = border;
  style.Colors[eImGuiCol_BorderShadow] = transparent;

  style.Colors[eImGuiCol_Button] = header;
  style.Colors[eImGuiCol_ButtonHovered] = hover;
  style.Colors[eImGuiCol_ButtonActive] = active;

  style.Colors[eImGuiCol_FrameBg] = white;
  style.Colors[eImGuiCol_FrameBgHovered] = hover;
  style.Colors[eImGuiCol_FrameBgActive] = active;

  style.Colors[eImGuiCol_MenuBarBg] = header;
  style.Colors[eImGuiCol_Header] = header;
  style.Colors[eImGuiCol_HeaderHovered] = hover;
  style.Colors[eImGuiCol_HeaderActive] = active;

  style.Colors[eImGuiCol_CheckMark] = text;
  style.Colors[eImGuiCol_SliderGrab] = grab;
  style.Colors[eImGuiCol_SliderGrabActive] = darker;

  style.Colors[eImGuiCol_ScrollbarBg] = header;
  style.Colors[eImGuiCol_ScrollbarGrab] = grab;
  style.Colors[eImGuiCol_ScrollbarGrabHovered] = dark;
  style.Colors[eImGuiCol_ScrollbarGrabActive] = darker;
  
  AgsImGui.SetStyle(style);
}

function room_AfterFadeIn()
{
  Display("This   is   the   same   demo   we   saw   in   Room   1.");
  Display("But   now   we   Themed   Dear   ImGui!");
  Display("You   can   use    myStyle  =   AgsImGui.GetStyle();     to   get   the   Style.[  Apply   it   back   with     AgsImGui.SetStyle(  myStyle  );     once   you   are   done!");
  Display("Themeing   can   be   handy   if   you   want   to   use   Dear   ImGui    for   gameplay   purposes.");
}
