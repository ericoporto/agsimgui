bool is_button_clicked;

// use function room_RepExec() when in Room Script and link it throught the editor
void room_RepExec(){
  AgsImGui.NewFrame(); //let's begin a new frame, we end it with a Render
	
  AgsImGui.BeginWindow("My first window");	
  ViewFrame* vf = Game.GetViewFrame(player.View, player.Loop, player.Frame);
  is_button_clicked = AgsImGui.ImageButton(vf.Graphic); 
  if(AgsImGui.IsItemHovered()) AgsImGui.SetTooltip(String.Format("frame %d",player.Frame));
  
  // we are not applying the resulting value from drag directly because we need to make the player stop moving
  // we could not do that, but when we set the x, this causes flickers on the pathfinding.
  int new_x = AgsImGui.DragInt("player.x", player.x); 
  if(new_x != player.x) { 
    player.StopMoving(); 
    player.x = new_x;
  }
  int new_y = AgsImGui.DragInt("player.y", player.y); 
  if(new_y != player.y) { 
    player.StopMoving(); 
    player.y = new_y;
  }
  
  // Checkbox only returns true when it's clicked, causing a change of state
  // It also needs to be supplied with the value for to be on display
  if(AgsImGui.Checkbox("player.Clickable",player.Clickable)){
    player.Clickable = !player.Clickable;
  } 
  if(AgsImGui.IsItemHovered()) AgsImGui.SetTooltip("Try to click with Look or Hand cursor on Roger!\nUse mouse wheel to switch cursor modes");
  
  AgsImGui.ValueBool("Player On Walkable Area",GetWalkableAreaAtRoom(player.x, player.y) != 0);
  
  AgsImGui.EndWindow();
	
  
  // This is our corner GUI to help us go to the next level
  AgsImGui.SetNextWindowPos(16, 16, ImGuiCond_Always);
  AgsImGui.BeginWindow("Level Selector",false, eImGuiWindowFlags_NoTitleBar);
  if(AgsImGui.Button("Go To Next Level")) AgsImGui.OpenPopup("Do you really want to?");
  
  if(AgsImGui.BeginPopupModal("Do you really want to?",true)){
    if(AgsImGui.Button("Yes, let's go!")) player.ChangeRoom(3, 336, 181, eDirectionDown);
    if(AgsImGui.Button("No, give me more time!")) AgsImGui.CloseCurrentPopup();
    AgsImGui.EndPopup();
  }
  
  AgsImGui.EndWindow();
  
  AgsImGui.Render(); // This will generate drawing instructions. 
  // AGS will actually draw this on screen later on, on Post Screen Draw stage.
}

void on_mouse_click (int btn){
  if(btn == eMouseWheelNorth){
    AgsImGui.DoMouseWheel(eImGuiDir_Down);
  } else if(btn == eMouseWheelSouth){
    AgsImGui.DoMouseWheel(eImGuiDir_Up);    
  }  
}
function room_Load()
{
  Game.Camera.Width = 320;
  Game.Camera.Height = 200;
  Screen.Viewport.Width = 960;
  Screen.Viewport.Height = 600;
}

function room_AfterFadeIn()
{
  Display("On   ImGui,   we   can   assume   states   are   not   stored   when   designing   the   GUIs.");
  Display("This   is   a   simple   demo   of   setting   values   to   the   player   character.");
}

function hDeadTrunk_Look()
{
  player.Say("There's  something  carved  here...");
  Display("When    great    trees    fall\nin    forests,\nsmall    things    recoil    into    silence,\ntheir    senses\neroded    beyond    fear.");
  player.Say("Interesting, I better copy this.");
  AgsImGuiHelper.SetClipboarText("When great trees fall\nin forests,\nsmall things recoil into silence,\ntheir senses\neroded beyond fear.\n");
}
